#####################
Tips, Tricks, and FAQ
#####################

The single best piece of advice for working with vLab is:

    *"If it hurts, do it more often"*
    - `Martin Fowler <https://martinfowler.com/bliki/FrequencyReducesDifficulty.html>`_

What this means is that your lab should be impermanent. Deleting a component and
replacing it should be as time consuming and painful as logging into your
workstation. Starting all over shouldn't be *"the end of the world"* or an all-day
event. This advice sounds counter intuitive, but the reality is that the more
transient your lab is, the more it benefits you.

***
FAQ
***

What's the username/password for ... ?
======================================

Most components allow users to login as either ``root``, ``admin``, or ``administrator``.
If you're trying to access the vCenter HTML console, the generic user is ``readonly@vlab.local``.

The password is probably a lower-case ``a`` (or ``ChangeMe`` for ECS).

Avamar
------
There are two different components for Avamar: the server and the NDMP accelerator.
The server only has a default password for *initial configuration*. Part of the
configuration process for the Avamar server is setting a new password. The NDMP
accelerator does not force you to change the default password.

- ``root`` and ``changeme``


What IPs/Subnets can I use in vLab?
===================================

Great question! The default network created is:

* ``192.168.1.0/24`` (i.e. subnet mask of ``255.255.255.0``)

The **Static IP range** is:

* ``192.168.1.2`` to ``192.168.1.149``

The **DHCP IP range** is:

* ``192.168.1.150`` to ``192.168.1.254``

You're free to create additional networks in vLab too! Those networks can be
whatever you want.


How do I see available versions of a component?
===============================================

Components can tell you the version (and syntax) available for deployment
via like this::

  $ vlab show <component> --images

For example, run the follow command to see what versions of OneFS are available::

  $ vlab show onefs --images

Why ``images`` instead of ``version``? Semantics; who really wants to talk about
*versions of some software (vLab) that deploys versions of other software?*


How to I request a new feature?
===============================

Easy! Just file an issue at https://github.com/willnx/vlab/issues
Keep in mind that we'll have questions about your feature request, so please
make sure to follow up in the issue with us.


I found a bug, what do I do?
============================

Awesome, thanks for finding that!
Please file an issue at https://github.com/willnx/vlab/issues

When you file an issue, please include:

1) The version of vLab CLI your using (the output of ``vlab --version``)
2) What command you ran
3) What the output was
4) What you expected to happen


How do I restart my gateway?
============================
The command to restart your gateway is ``vlab power restart --name defaultGateway``.

Why do users restart their gateway? It might work around the issue causing the following
errors:
(*your error might be slightly different, especially when a FQDN is part of the error message*)

- ``Error: unable to find host user.vlab.local for /api/1/ipam/portmap``
- ``Error: service unavailable``


Error: Token generated by ...
=============================
The authentication tokens used by the vLab CLI are cached on your system. This
is so you do not have to constantly enter your password to interact with vLab.
To prevent `session hijacking <https://owasp.org/www-community/attacks/Session_hijacking_attack>`_
the vLab server associates these tokens with the IP address that originally
requested the token. This means if your IP suddenly changes in the middle of the
day (i.e. your VPN connection drops), you might see an error like this:

.. code-block:: shell

   Error: Token generated by 1.2.3.4, but sent from 1.2.3.52

You can work around this easily! Just refresh your token:

.. code-block:: shell

   vlab token --refresh


Tab Completion
==============
The ``2021.1.28`` (year.month.day) release of the vLab CLI added support for
`tab completion <https://en.wikipedia.org/wiki/Command-line_completion>`_. Only
the following shells have support for this feature:

- `PowerShell <https://docs.microsoft.com/en-us/powershell/>`_
- `Bash <https://www.gnu.org/software/bash/>`_
- `Zsh <https://www.zsh.org/>`_
- `fish <https://fishshell.com/>`_

This means if you're using something like `Windows CMD <https://en.wikipedia.org/wiki/Cmd.exe>`_,
tab completion wont work. To be clear, it's because you're using a terrible shell
that doesn't support tab completion, not a lack of functionality in the vLab CLI.

Setting up (existing users)
---------------------------
If you've been using vLab since before the ``2021.1.18`` release, or you got an
old copy of the CLI from a colleague instead of downloading the latest and greatest
right from this site, run the following command:

.. code-block:: shell

   $ vlab init --only-tab-completion

.. note::

   If you're **not** using PowerShell, you'll also want to use the ``--tab-completion-shell``
   argument to configure your specific shell.

Setting up (new users)
----------------------
Just walk through the :ref:`init_lab` steps. Configuring tab completion is done
automatically for you. At most, checkout that giant **Note** in the section just
above this one.
